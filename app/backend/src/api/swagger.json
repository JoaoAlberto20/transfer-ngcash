{
  "openapi": "3.0.1",
  "info": {
    "title": "Transfer NgCah API Documentation",
    "description": "This is an API for a clone using Node, Express, Prisma and Postgres",
    "version": "1.0.0",
    "contact": {
      "name": "João Alberto",
      "email": "joaoalbertosv15@gmail.com"
    }    
  },
  "servers": [
    {
      "url": "http://localhost:3001/"
    }
  ],
  "tags": [
    {
      "name": "Login",
      "description": "Autenticaticação do usuário"
    },
    {
      "name": "Users",
      "description": "Gerenciamento de usuários"
    },
    {
      "name": "Balance",
      "description": "Balanço do usuário"
    },
    {
      "name": "Transactions",
      "description": "Operação para transações"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Cria um novo usuário",
        "description": "Campo para criação de um usuário",
        "requestBody": {
          "description": "Campos obrigatórios para criação de um usuários",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/LoginCreate",
                "example": {
                  "username": "Usersilva",
                  "password": "User123456"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UsersLoginCreate"
                }
              }
            }
          },
          "400": {
            "description": "Username já está sendo utilizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Username já está sendo utilizado."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/validate": {
      "get": {
        "tags": ["Users"],
        "summary": "Validando o usuário",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Operação feita com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Usuário não existe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Usuário não existe."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token invalido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Token invalido."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Login"],
        "summary": "Faz o login do usuário",
        "description": "Campo para autenticação de um usuário",
        "requestBody": {
          "description": "Compos obrigatório para autenticação de um usuário",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/LoginCreate",
                "example": {
                  "username": "Usersilva",
                  "password": "User123456"
                }
              }
            }
          },
          "required": true 
        },
        "responses": {
          "201": {
            "description": "Login feito com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UsersLoginCreate"
                }
              }
            } 
          },
          "400": {
            "description": "Usuário invalido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Email ou password invalido."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balance": {
      "get": {
        "tags": ["Balance"],
        "summary": "Retorna o balanço da conta do usuário",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Balance feito com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Balance"
                }
              }
            } 
          },
          "400": {
            "description": "Usuário não existe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Usuário não existe."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token invalido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Token invalido."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Create Transactions",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Operação feita com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Usuário não existe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Usuário não existe."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token invalido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Token invalido."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Retornando transactions",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Operação feita com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Usuário não existe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Usuário não existe."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token invalido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Token invalido."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LoginCreate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UsersLoginCreate": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Balance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "balance": {
            "type": "number"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": ["cash-in", "cash-out"]
          },
          "value": {
            "type": "number"
          },
          "username": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "description": "Autenticação utilIzando JWT",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}